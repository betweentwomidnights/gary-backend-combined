version: '3.8'
services:
  g4lwebsockets:
    image: thecollabagepatch/g4lwebsockets:latest
    build:
      context: .
      dockerfile: Dockerfile.g4lwebsockets
    ports:
      - "26531:8000"
    environment:
      - ENV_VARIABLE=value  # Add any required environment variables here
    depends_on:
      - redis
      - mongo
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ["1", "2"]
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always

  concurrent_gary:
    image: thecollabagepatch/concurrent_gary:latest
    build:
      context: .
      dockerfile: Dockerfile.concurrent_gary
    ports:
      - "26530:8001"
    environment:
      - ENV_VARIABLE=value  # Add any required environment variables here
    depends_on:
      - redis
      - mongo
    entrypoint: ["/usr/src/app/concurrent_gary-entrypoint.sh"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ["3", "4"]
              capabilities: [gpu]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/generate || curl -f http://localhost:8001/continue || curl -f http://localhost:8001/tasks"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always

  express-server:
    image: thecollabagepatch/express-server:latest
    build:
      context: .
      dockerfile: Dockerfile.express-server
    ports:
      - "26532:3000"
    environment:
      - ENV_VARIABLE=value  # Add any required environment variables here
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/combine-audio"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  mongo:
    image: "mongo:latest"
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:
